

sub TO_JSON \{
    my $self = shift;
    my $extra_args = $self->extra_args // \{\};
    my $meta = $self->meta;
    my %hash = %$self;
    for my $name (sort keys %hash) \{
        my $attr = $meta->get_attribute($name);
        if (defined $attr) \{
            my $value = $hash\{$name\};
            my $type = $attr->type_constraint;
            if ($type && $type->equals('Bool')) \{
                $hash\{$name\} = $value ? \1 : \ 0;
            \}
        \}
    \}
    %hash = (%hash, %$extra_args);
    delete $hash\{'extra_args'\};
    if ($self->can('type') && (!defined $hash\{'type'\})) \{
        $hash\{type\} = $self->type();
    \}
    return \%hash;
\}

=head2 type

Trace type.

=cut

sub type \{
	my @components = split(/::/, __PACKAGE__);
	return lc($components[-1]);
\}

=head1 ATTRIBUTES

=over

=cut

