/**
 * @file Box.h
This attribute is part of the possible options for the trace violin.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#violin>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>

#include "CppPlotly/Trace/Violin/Box/Line.h"



namespace CppPlotly {
    namespace Trace {
    namespace violin {

    /**
     * 
     *
     *
     */
    class Box {
    public:

    /**
Sets the inner box plot fill color.
*/Box & Fillcolor(const json11::Json &fillcolor ) {
    _box.insert({"fillcolor", fillcolor});
    return *this;
}


Box & Line(const CppPlotly::Trace::violin::box::Line &line ) {
    _box.insert({"line", line});
    return *this;
}


/**
Determines if an miniature box plot is drawn inside the violins. 
*/Box & Visible(const bool &visible ) {
    _box.insert({"visible", visible});
    return *this;
}


/**
Sets the width of the inner box plots relative to the violins' width. For example, with 1, the inner box plots are as wide as the violins.
*/Box & Width(const double &width ) {
    _box.insert({"width", width});
    return *this;
}




    json11::Json to_json() const {
        return _box;
    }

    private:

    json11::Json::object _box;

    };

    }

    }
}
