/**
 * @file Starts.h
This attribute is part of the possible options for the trace streamtube.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#streamtube>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>




namespace CppPlotly {
    namespace Trace {
    namespace streamtube {

    /**
     * 
     *
     *
     */
    class Starts {
    public:

    /**
Sets the x components of the starting position of the streamtubes
*/Starts & X(const std::vector<double> &x ) {
    _starts.insert({"x", x});
    return *this;
}


/**
Sets the x components of the starting position of the streamtubes
*/Starts & X(const std::vector<std::string> &x ) {
    _starts.insert({"x", x});
    return *this;
}


/**
Sets the x components of the starting position of the streamtubes
*/Starts & X(const json11::Json &x ) {
    _starts.insert({"x", x});
    return *this;
}


/**
Sets the source reference on plot.ly for  x .
*/Starts & Xsrc(const std::string &xsrc ) {
    _starts.insert({"xsrc", xsrc});
    return *this;
}


/**
Sets the y components of the starting position of the streamtubes
*/Starts & Y(const std::vector<double> &y ) {
    _starts.insert({"y", y});
    return *this;
}


/**
Sets the y components of the starting position of the streamtubes
*/Starts & Y(const std::vector<std::string> &y ) {
    _starts.insert({"y", y});
    return *this;
}


/**
Sets the y components of the starting position of the streamtubes
*/Starts & Y(const json11::Json &y ) {
    _starts.insert({"y", y});
    return *this;
}


/**
Sets the source reference on plot.ly for  y .
*/Starts & Ysrc(const std::string &ysrc ) {
    _starts.insert({"ysrc", ysrc});
    return *this;
}


/**
Sets the z components of the starting position of the streamtubes
*/Starts & Z(const std::vector<double> &z ) {
    _starts.insert({"z", z});
    return *this;
}


/**
Sets the z components of the starting position of the streamtubes
*/Starts & Z(const std::vector<std::string> &z ) {
    _starts.insert({"z", z});
    return *this;
}


/**
Sets the z components of the starting position of the streamtubes
*/Starts & Z(const json11::Json &z ) {
    _starts.insert({"z", z});
    return *this;
}


/**
Sets the source reference on plot.ly for  z .
*/Starts & Zsrc(const std::string &zsrc ) {
    _starts.insert({"zsrc", zsrc});
    return *this;
}




    json11::Json to_json() const {
        return _starts;
    }

    private:

    json11::Json::object _starts;

    };

    }

    }
}
