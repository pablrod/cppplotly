/**
 * @file Line.h
This attribute is part of the possible options for the trace box.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#box>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>




namespace CppPlotly {
    namespace Trace {
    namespace box {
namespace marker {

    /**
     * 
     *
     *
     */
    class Line {
    public:

    /**
Sets the marker.line color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set.
*/Line & Color(const json11::Json::object &color ) {
    _line.insert({"color", color});
    return *this;
}


/**
Sets the border line color of the outlier sample points. Defaults to marker.color
*/Line & Outliercolor(const json11::Json::object &outliercolor ) {
    _line.insert({"outliercolor", outliercolor});
    return *this;
}


/**
Sets the border line width (in px) of the outlier sample points.
*/Line & Outlierwidth(const double &outlierwidth ) {
    _line.insert({"outlierwidth", outlierwidth});
    return *this;
}


/**
Sets the width (in px) of the lines bounding the marker points.
*/Line & Width(const double &width ) {
    _line.insert({"width", width});
    return *this;
}




    json11::Json to_json() const {
        return _line;
    }

    private:

    json11::Json::object _line;

    };

    }
}

    }
}
