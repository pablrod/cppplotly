/**
 * @file Marker.h
This attribute is part of the possible options for the trace pie.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#pie>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>

#include "CppPlotly/Trace/Pie/Marker/Line.h"



namespace CppPlotly {
    namespace Trace {
    namespace pie {

    /**
     * 
     *
     *
     */
    class Marker {
    public:

    /**
Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.
*/Marker & Colors(const std::vector<double> &colors ) {
    _marker.insert({"colors", colors});
    return *this;
}


/**
Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.
*/Marker & Colors(const std::vector<std::string> &colors ) {
    _marker.insert({"colors", colors});
    return *this;
}


/**
Sets the color of each sector of this pie chart. If not specified, the default trace color set is used to pick the sector colors.
*/Marker & Colors(const json11::Json::object &colors ) {
    _marker.insert({"colors", colors});
    return *this;
}


/**
Sets the source reference on plot.ly for  colors .
*/Marker & Colorssrc(const std::string &colorssrc ) {
    _marker.insert({"colorssrc", colorssrc});
    return *this;
}


Marker & Line(const CppPlotly::Trace::pie::marker::Line &line ) {
    _marker.insert({"line", line});
    return *this;
}




    json11::Json to_json() const {
        return _marker;
    }

    private:

    json11::Json::object _marker;

    };

    }

    }
}
