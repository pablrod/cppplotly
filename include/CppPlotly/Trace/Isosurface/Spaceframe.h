/**
 * @file Spaceframe.h
This attribute is part of the possible options for the trace isosurface.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#isosurface>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>




namespace CppPlotly {
    namespace Trace {
    namespace isosurface {

    /**
     * 
     *
     *
     */
    class Spaceframe {
    public:

    /**
Sets the fill ratio of the `spaceframe` elements. The default fill value is 0.15 meaning that only 15% of the area of every faces of tetras would be shaded. Applying a greater `fill` ratio would allow the creation of stronger elements or could be sued to have entirely closed areas (in case of using 1).
*/Spaceframe & Fill(const double &fill ) {
    _spaceframe.insert({"fill", fill});
    return *this;
}


/**
Displays/hides tetrahedron shapes between minimum and maximum iso-values. Often useful when either caps or surfaces are disabled or filled with values less than 1.
*/Spaceframe & Show(const bool &show ) {
    _spaceframe.insert({"show", show});
    return *this;
}




    json11::Json to_json() const {
        return _spaceframe;
    }

    private:

    json11::Json::object _spaceframe;

    };

    }

    }
}
