/**
 * @file Project.h
This attribute is part of the possible options for the trace surface.

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#surface>

DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with C++.

*/

#include <vector>
#include <string>
#include <sstream>

#include <json11.hpp>




namespace CppPlotly {
    namespace Trace {
    namespace surface {
namespace contours {
namespace x {

    /**
     * 
     *
     *
     */
    class Project {
    public:

    /**
Determines whether or not these contour lines are projected on the x plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence.
*/Project & X(const bool &x ) {
    _project.insert({"x", x});
    return *this;
}


/**
Determines whether or not these contour lines are projected on the y plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence.
*/Project & Y(const bool &y ) {
    _project.insert({"y", y});
    return *this;
}


/**
Determines whether or not these contour lines are projected on the z plane. If `highlight` is set to *true* (the default), the projected lines are shown on hover. If `show` is set to *true*, the projected lines are shown in permanence.
*/Project & Z(const bool &z ) {
    _project.insert({"z", z});
    return *this;
}




    json11::Json to_json() const {
        return _project;
    }

    private:

    json11::Json::object _project;

    };

    }
}
}

    }
}
